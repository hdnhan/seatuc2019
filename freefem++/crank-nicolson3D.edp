load "msh3"
load "medit"

int nn = 32;
int Nt = nn;
int Nx = nn, Ny = nn, Nz = nn;
int[int] labels = [1, 1, 1, 1, 1, 1];
mesh3 Th = cube(Nx, Ny, Nz, label = labels);
fespace Vh(Th, P1);

real T = 1, dt = T / Nt;
Vh u0 = sin(pi * x) * sin(pi * y) * sin(pi * z);
Vh u = u0, v, uold;

Vh f0 = (1 + 3 * pi ^ 2) * u0;
macro grad(u) [dx(u), dy(u), dz(u)]//
for(real t = dt; t <= T; t += dt){
	func ue = exp(t) * sin(pi * x) * sin(pi * y) * sin(pi * z);
	func f = (1 + 3 * pi ^ 2) * ue;
	uold = u;
	
	solve CrankNicolson(u, v, solver = CG) = 
			int3d(Th)(u * v / dt + 0.5 * grad(u)' * grad(v))
			+ int3d(Th)(-uold * v / dt + 0.5 * grad(uold) '* grad(v))
			- int3d(Th)(0.5 * (f + f0) * v) + on(1, u = 0);
	f0 = f;
	if (t == T){
		cout << "L2 Error: " << sqrt(int3d(Th)((ue - u) ^ 2)) << endl;
	}
}